// Generated by CoffeeScript 1.7.1
(function() {
  var Bijous, EventEmitter, Klect, async, exports, getModuleName, path, util, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  path = require('path');

  util = require('util');

  async = require('async');

  _ = require('lodash');

  EventEmitter = require('events').EventEmitter;

  Klect = require('klect');

  getModuleName = function(file) {
    var extname;
    extname = path.extname(file);
    return path.basename(file, extname);
  };

  Bijous = (function(_super) {
    __extends(Bijous, _super);

    Bijous.defaultBundles = 'modules/*';

    Bijous.defaultBundleName = '_';

    function Bijous(_arg) {
      var _ref;
      _ref = _arg != null ? _arg : {}, this.cwd = _ref.cwd, this.bundles = _ref.bundles, this.defaultBundleName = _ref.defaultBundleName;
      if (this.cwd == null) {
        this.cwd = path.dirname(module.parent.filename);
      }
      if (this.bundles == null) {
        this.bundles = Bijous.defaultBundles;
      }
      if (this.defaultBundleName == null) {
        this.defaultBundleName = Bijous.defaultBundleName;
      }
    }

    Bijous.prototype.list = function(bundle) {
      var klect;
      klect = new Klect({
        cwd: this.cwd,
        defaultBundleName: this.defaultBundleName
      });
      return klect.gather(this.bundles).bundles(bundle);
    };

    Bijous.prototype.require = function(bundle) {
      return _.flatten(this.list(bundle).map((function(_this) {
        return function(asset) {
          return asset.files.map(function(file) {
            return {
              name: getModuleName(file),
              bundle: asset.name,
              module: require(path.join(_this.cwd, file))
            };
          });
        };
      })(this)));
    };

    Bijous.prototype.loadModule = function(def, results, done) {
      return def.module.call(null, this, results, (function(_this) {
        return function(error, result) {
          var _name;
          if (result) {
            if (def.bundle === _this.defaultBundleName) {
              results[def.name] = result;
            } else {
              _.merge(results[_name = def.bundle] != null ? results[_name] : results[_name] = {}, _.object([def.name], [result]));
            }
          }
          if (!error) {
            _this.emit('loaded', def.name, results);
          }
          return done(error);
        };
      })(this));
    };

    Bijous.prototype.load = function(bundle, callback) {
      var fns, results, _ref;
      if ('function' === typeof bundle) {
        _ref = [bundle, null], callback = _ref[0], bundle = _ref[1];
      }
      results = {};
      fns = this.require(bundle).map((function(_this) {
        return function(def) {
          return function(done) {
            return _this.loadModule(def, results, done);
          };
        };
      })(this));
      return async.series(fns, (function(_this) {
        return function(error) {
          if (callback) {
            callback(error, results);
          }
          if (error && !callback) {
            return _this.emit('error', error);
          } else if (!error) {
            return _this.emit('done', results);
          }
        };
      })(this));
    };

    return Bijous;

  })(EventEmitter);

  exports = module.exports = Bijous;

}).call(this);
